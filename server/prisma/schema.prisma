// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  firstName      String           @default("")
  lastName       String           @default("")
  email          String           @unique @default("")
  username       String           @unique
  password       String
  RunningServers RunningServers[]
}

model Game {
  id          Int           @id @default(autoincrement())
  name        String
  dirName     String
  gameVersion GameVersion[]
}

model GameVersion {
  id                   Int                    @id @default(autoincrement())
  gameId               Int
  game                 Game                   @relation(fields: [gameId], references: [id])
  version              String
  downloadLink         String?
  installScript        String?
  cacheFile            String?
  scriptFile           String?
  searchShScript       String?
  runScript            String?                @db.Text
  searchScript         String?
  service              String?
  runningServers       RunningServers[]
  runOnce              Json?
  getFilesSetup        GetFilesSetup[]
  changeFileAfterSetup ChangeFileAfterSetup[]
}

model SysUser {
  id        Int       @id @default(autoincrement())
  username  String    @unique @db.VarChar(100)
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  deleted   Boolean   @default(false)

  userAccess     UserAccess[]
  runningServers RunningServers[]
}

model TerminalError {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  msg       String   @db.LongText
}

model UserAccess {
  id        Int     @id @default(autoincrement())
  path      String
  sysUserID Int
  sysUser   SysUser @relation(fields: [sysUserID], references: [id])
}

model DownloadedFile {
  id   Int    @id @default(autoincrement())
  path String
  file String
}

model RunningServers {
  id            Int         @id @default(autoincrement())
  gameVersionId Int
  createdAt     DateTime    @default(now())
  deletedAt     DateTime?
  deleted       Boolean     @default(false)
  gameVersion   GameVersion @relation(fields: [gameVersionId], references: [id])
  path          String
  scriptFile    String      @default("")
  sysUserId     Int
  pid           Int         @default(0)
  config        Json?
  sysUser       SysUser     @relation(fields: [sysUserId], references: [id])
  userId        Int?
  user          User?       @relation(fields: [userId], references: [id])
}

model GetFilesSetup {
  id            Int         @id @default(autoincrement())
  gameVersionId Int
  gameVersion   GameVersion @relation(fields: [gameVersionId], references: [id])
  fileName      String      @db.Text
  content       String      @db.Text
}

model ChangeFileAfterSetup {
  id            Int         @id @default(autoincrement())
  gameVersionId Int
  gameVersion   GameVersion @relation(fields: [gameVersionId], references: [id])
  actions       Json
}
